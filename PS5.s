// <===EXERCISE 2.11===>
// 2.11.1
0xE0842005 === 1110 0000 1000 0100 0010 0000 0000 0101
0xE0423001 === 1110 0000 0100 0010 0011 0000 0000 0001

// 2.11.2
0xE0842005 === 3,766,755,333
0xE0423001 === 3,762,434,049

// 2.11.3
ADD r2, r4, r5
SUB r3, r2, r1

// 2.11.4
a. DT
b. DP

// 2.11.5
a. STR r5, [r6]
b. SUB r5, r6, r0  // if I == 0
   SUB r5, r6, #0  // if I == 1

// 2.11.6
a. 1110 01 0 1101 0 0110 0101 000000000000
   0xE5A65000
b. 1110 00 0 0010 0 0110 0101 000000000000 // if I == 0
   0xE0465000
   1110 00 1 0010 0 0110 0101 000000000000 // if I == 0
   0xE2465000

// <===EXERCISE 2.13===>
a. r3 = 0x55555555
   r4 = 0x12345678
b. r3 = 0xBEADFEED
   r4 = 0xDEADFADE

// 2.13.1
a. 0101 0111 0111 0101 0101 0111 0111 1000
   0x57755778
b. 1111 1110 1111 1111 1111 1110 1101 1110
   0xFEFFFEDE

// 2.13.2
a. 0010 0011 0100 0101 0110 0111 1000 0000
   0x23456780
b. 1110 1010 1101 1111 1010 1101 1110 0000
   0xEADFADE0

// 2.13.3
a. 0000 0000 0000 0000 1010 1010 1010 1010
   0x0000AAAA
b. 0000 0000 0000 0000 1011 1111 0100 1011
   0x0000BF4B

// 2.18.2
a:
    MOV r2, #0
    MOV r3, #10
L1: CMP r2, r3
    BGE LQ
    ADD r0, r0, r1
    ADD r2, r2, #1
    B   L1
LQ:

b:
    MOV r3, #10
L1: CMP r0, r3
    BGE LQ
    ADD r5, r0, r1
    STR r5, [r6]
    ADD r0, r0, #1
    B   L1
LQ:

// 2.18.3
